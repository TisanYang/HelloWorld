import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    namespace 'hf.car.wifi.video'
    compileSdk android_sdk_version.compileSdk

    defaultConfig {
        applicationId "hf.car.wifi.video"
        minSdk android_sdk_version.minSdk
        targetSdk android_sdk_version.targetSdk
        versionCode app_version.versionCode
        versionName app_config.versionName

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        //HuaFu app签名
        hf_app_sign {
            keyAlias 'huafukey'
            keyPassword 'huafu20230810'
            storeFile file('huafu_mobile_app_sign.jks')
            storePassword 'huafu20230810'
        }
    }
    def signConfig = signingConfigs.hf_app_sign

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signConfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output -> outputFileName = app_config.apkName + app_config.versionName + "_" + variant.buildType.name + ".apk"
        }
    }
}

dependencies {
    implementation fileTree(includes: ['*.jar', '*.aar'], dir: 'libs')
    implementation project(':mvvm')

    testImplementation(libs.junit.junit)
    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.androidx.test.espresso.core)

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.google.android.material)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.swiperefreshlayout)

    //gson
    implementation(libs.google.code.gson)

    //netty
    implementation(libs.io.netty.all)

    //camera
    implementation(libs.androidx.camera.core)
    implementation(libs.androidx.camera.camera2)
    implementation(libs.androidx.camera.lifecycle)
    implementation(libs.androidx.camera.video)
    implementation(libs.androidx.camera.view)
    implementation(libs.androidx.camera.extensions)

    //Glide
    implementation(libs.bumptech.glide.glide)
    kapt(libs.bumptech.glide.compiler)

    //BaseRecyclerviewAdapterHelper
    implementation(libs.base.recyclerview.adapter.helper)

    implementation(libs.shape.view)
    implementation(libs.crash.view)
    implementation(libs.refresh.layout.kernel)
    implementation(libs.refresh.header.classics)
    implementation(libs.refresh.footer.classics)
    implementation 'me.rosuh:AndroidFilePicker:0.8.3'

}

tasks.withType(KotlinCompile.class).configureEach {
    kotlinOptions.jvmTarget = "1.8"
}